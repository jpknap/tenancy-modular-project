name: Deploy Laravel Project

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  SSH_HOST: ${{ vars.SSH_HOST }}
  SSH_USER: ${{ vars.SSH_USER }}
  SSH_PORT: ${{ vars.SSH_PORT }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  ENV_CONTENT: ${{ vars.ENV_CONTENT }}
  DB_CONNECTION: sqlite
  DB_DATABASE: database/database.sqlite

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, xml, ctype, json, tokenizer, bcmath, pdo_sqlite
          tools: composer
          coverage: none

      - name: Create database directory and file
        run: |
          mkdir -p database
          touch database/database.sqlite
          chmod 777 database/database.sqlite

      - name: Copy .env for testing
        run: |
          cp .env.example .env
          echo "APP_ENV=testing" >> .env
          echo "DB_CONNECTION=sqlite" >> .env
          echo "DB_DATABASE=database/database.sqlite" >> .env
          echo "APP_DEBUG=true" >> .env
          echo "APP_KEY=" >> .env
          php artisan key:generate

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-progress --no-interaction
          npm install
          npm run build

      - name: Run ECS (Easy Coding Standard)
        run: composer check-style

      - name: Run PHPStan
        run: composer test-phpstan

      - name: Run tests
        run: |
          php artisan config:clear
          php artisan test --coverage-clover=coverage.xml

      - name: Check coverage threshold
        run: |
          vendor/bin/phpunit-coverage-check coverage.xml 80

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          fail_ci_if_error: true

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to server
        env:
          SSH_AUTH_SOCK: ${{ env.SSH_AUTH_SOCK }}
        run: |
          echo "${{ vars.ENV_CONTENT }}" > .env
          ssh -o StrictHostKeyChecking=no -p ${{ vars.SSH_PORT }} ${{ vars.SSH_USER }}@${{ vars.SSH_HOST }} \
            'cd /var/www/your-project && \
             git pull origin main && \
             composer install --no-dev --optimize-autoloader && \
             php artisan migrate --force && \
             npm install && \
             npm run build && \
             php artisan optimize:clear && \
             php artisan config:cache && \
             php artisan route:cache && \
             php artisan view:cache'
